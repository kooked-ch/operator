name: Build Docker Image

on:
    push:
        branches:
            - main
jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Get Latest Release
              id: get_release
              run: |
                  # Récupère la dernière version publiée
                  latest_release=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name || echo "0.1.0")
                  # Utilise directement la variable 'latest_release' au lieu de '${{ env.latest_release }}'
                  # Supprimer le préfixe 'v' si présent
                  if [[ $latest_release == v* ]]; then
                    latest_release="${latest_release#v}"
                  fi

                  echo "Latest release: $latest_release"

                  # Exporter la nouvelle version dans l'environnement GitHub
                  echo "latest_release=$latest_release" >> $GITHUB_ENV

            - name: Convert repository name to lowercase
              run: echo "repository_name=$(echo '${{ github.event.repository.name }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and Push Docker Image
              uses: docker/build-push-action@v6
              with:
                  push: true
                  tags: |
                      ${{ github.repository_owner }}/${{ env.repository_name }}:${{ env.latest_release }}
                      ${{ github.repository_owner }}/${{ env.repository_name }}:latest
